<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Roots.Web</name>
    </assembly>
    <members>
        <member name="T:Roots.Web.Controllers.EventController">
            <summary>
            Api endpoints for Events
            </summary>
        </member>
        <member name="M:Roots.Web.Controllers.EventController.Get(Roots.Web.Queries.EventQuery)">
            <summary>
            Get a list of events with event type and place. Filter on date and event type, 
            and paging with page number and limit.
            </summary>
            <returns>A list of events</returns>
        </member>
        <member name="M:Roots.Web.Controllers.EventController.Get(System.Int32)">
            <summary>
            Get a specific event with event type and place.
            </summary>
            <param name="id">Event Id</param>
            <returns>An event</returns>
        </member>
        <member name="M:Roots.Web.Controllers.EventController.Create(Roots.Web.InputModels.EventCreateModel)">
            <summary>
            Creates a new Event.
            </summary>
            <param name="model">The Event create model</param>
            <returns>Inserted id</returns>
        </member>
        <member name="M:Roots.Web.Controllers.EventController.Update(Roots.Web.InputModels.EventUpdateModel)">
            <summary>
            Updates an Event.
            </summary>
            <param name="model">The Event update model</param>
            <returns>Number of records updated</returns>
        </member>
        <member name="M:Roots.Web.Controllers.EventController.Delete(Roots.Web.InputModels.DeleteModel)">
            <summary>
            Delete an Event.
            </summary>
            <param name="model">The Event delete model</param>
            <returns>Number of records deleted</returns>
        </member>
        <member name="T:Roots.Web.Controllers.EventTypeController">
            <summary>
            Api endpoints for EventTypes
            </summary>
        </member>
        <member name="M:Roots.Web.Controllers.EventTypeController.Get(Roots.Web.Queries.EventTypeQuery)">
            <summary>
            Get a list of eventtypes. Filter on name, Gedcomtag and family event. 
            Paging with page number and limit.
            </summary>
            <returns>A list of event types</returns>
        </member>
        <member name="M:Roots.Web.Controllers.EventTypeController.Get(System.Int32)">
            <summary>
            Get a specific eventtype.
            </summary>
            <param name="id">Event Id</param>
            <returns>An eventtype</returns>
        </member>
        <member name="M:Roots.Web.Controllers.EventTypeController.Create(Roots.Web.InputModels.EventTypeCreateModel)">
            <summary>
            Create a new EventType.
            </summary>
            <param name="model">The EventType create model</param>
            <returns>Inserted id</returns>
        </member>
        <member name="M:Roots.Web.Controllers.EventTypeController.Update(Roots.Web.InputModels.EventTypeUpdateModel)">
            <summary>
            Updates a EventType.
            </summary>
            <param name="model">The EventType update model</param>
            <returns>Number of records updated</returns>
        </member>
        <member name="M:Roots.Web.Controllers.EventTypeController.Delete(Roots.Web.InputModels.DeleteModel)">
            <summary>
            Delete a EventType.
            </summary>
            <param name="model">The EventType delete model</param>
            <returns>Number of records deleted</returns>
        </member>
        <member name="T:Roots.Web.Controllers.PersonController">
            <summary>
            Api endpoints for Person
            </summary>
        </member>
        <member name="M:Roots.Web.Controllers.PersonController.Get(Roots.Web.Queries.PersonQuery)">
            <summary>
            Gets a list of all persons. Filter on name, gender and living status, and paging with page number and limit.
            </summary>
            <returns>A list of Person models with events</returns>
        </member>
        <member name="M:Roots.Web.Controllers.PersonController.Get(System.Int32)">
            <summary>
            Gets a specific person.
            </summary>
            <param name="id">The Person Id</param>
            <returns>A Person model with events</returns>
        </member>
        <member name="M:Roots.Web.Controllers.PersonController.Create(Roots.Web.InputModels.PersonCreateModel)">
            <summary>
            Create a new person.
            </summary>
            <param name="model">The Person create model</param>
            <returns>Inserted id</returns>
        </member>
        <member name="M:Roots.Web.Controllers.PersonController.Update(Roots.Web.InputModels.PersonUpdateModel)">
            <summary>
            Updates a person.
            </summary>
            <param name="model">The Person update model</param>
            <returns>Number of records updated</returns>
        </member>
        <member name="M:Roots.Web.Controllers.PersonController.Delete(Roots.Web.InputModels.DeleteModel)">
            <summary>
            Delete a person.
            </summary>
            <param name="model">The Person delete model</param>
            <returns>Number of records deleted</returns>
        </member>
        <member name="T:Roots.Web.Controllers.PlaceController">
            <summary>
            Api endpoints for Place
            </summary>
        </member>
        <member name="M:Roots.Web.Controllers.PlaceController.Get(Roots.Web.Queries.PlaceQuery)">
            <summary>
            Gets a list of all places. Filter on name, and paging with page number and limit.
            </summary>
            <returns>A list of Place models</returns>
        </member>
        <member name="M:Roots.Web.Controllers.PlaceController.Get(System.Int32)">
            <summary>
            Gets a specific place.
            </summary>
            <param name="id">The Place Id</param>
            <returns>A Place model</returns>
        </member>
        <member name="M:Roots.Web.Controllers.PlaceController.Create(Roots.Web.InputModels.PlaceCreateModel)">
            <summary>
            Create a new place.
            </summary>
            <param name="model">The Place create model</param>
            <returns>Inserted id</returns>
        </member>
        <member name="M:Roots.Web.Controllers.PlaceController.Update(Roots.Web.InputModels.PlaceUpdateModel)">
            <summary>
            Updates a place.
            </summary>
            <param name="model">The Place update model</param>
            <returns>Number of records updated</returns>
        </member>
        <member name="M:Roots.Web.Controllers.PlaceController.Delete(Roots.Web.InputModels.DeleteModel)">
            <summary>
            Delete a place.
            </summary>
            <param name="model">The Place delete model</param>
            <returns>Number of records deleted</returns>
        </member>
    </members>
</doc>
